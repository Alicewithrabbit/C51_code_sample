C51 COMPILER V9.54   FRAG_2                                                                07/13/2016 17:45:24 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE FRAG_2
OBJECT MODULE PLACED IN .\Objects\frag_2.obj
COMPILER INVOKED BY: E:\Keil_v5\C51\BIN\C51.EXE frag_2.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\frag_2.lst) TABS(2) OBJECT(.\Objects\frag_2.obj)

line level    source

   1          #include<reg52.h>
   2          #include<absacc.h>
   3          #include"frag2.h"
   4          #include"frag3.h"
   5          #include"frag4.h"
   6          unsigned char Column;
   7          unsigned char Page_ ;  // 页地址寄存器 D1,DO:页地址
   8          unsigned char Code_ ;  // 字符代码寄存器
   9          unsigned char Command; // 指令寄存器
  10          unsigned char LCDData; // 数据寄存器
  11          xdata unsigned char CWADD1 _at_ 0x1cff;   // 写指令代码地址(E1)
  12          xdata unsigned char DWADD1 _at_ 0x1eff;   // 写显示数据地址(E1)
  13          xdata unsigned char CRADD1 _at_ 0x1dff;   // 读状态字地址(E1)
  14          xdata unsigned char DRADD1 _at_ 0x1fff;   // 读显示数据地址(E1)                 
  15          xdata unsigned char CWADD2 _at_ 0x3cff;   // 写指令代码地址(E2)
  16          xdata unsigned char DWADD2 _at_ 0x3eff;   // 写显示数进地址(E2)
  17          xdata unsigned char CRADD2 _at_ 0x3dff;   // 读状态字地址(E2)
  18          xdata unsigned char DRADD2 _at_ 0x3fff;   // 读显示数据地址(E2)
  19          unsigned char code Disp_Tab2[] = {0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09};
  20          unsigned int bs=0x1B;//BLACKSTAR
  21          unsigned int ws=0X18;//WHITESTAR
  22          unsigned int cs=0;
  23          unsigned int a1=0;//假名CODE 
  24          //中文字模表，根据自己需要更改  
  25          code unsigned char CCTAB[][32]={
  26                      
  27                      {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,//终点 0
  28                      0x3E,0x3C,0x38,0x30,0x20,0x00,0x00,0x00,
  29                      0x00,0x00,0x00,0x80,0x80,0x80,0x80,0xFF,
  30                      0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x00},
  31                      
  32                      {0x00,0x00,0x00,0x30,0xCC,0xCA,0xB9,0x31,//马里奥右静止 1
  33                      0x01,0x59,0x61,0x4A,0xCA,0x4A,0x34,0x00,
  34                      0x00,0x06,0x69,0x91,0x90,0xB8,0x68,0x25,
  35                      0x27,0x4E,0xA4,0xA5,0xAF,0x79,0x32,0x0C},           
  36                                  
  37                      {0x00,0x00,0x80,0x30,0xCC,0xCA,0xB9,0x31,//马里奥右奔跑 2
  38                      0x01,0x59,0x62,0x4A,0x8D,0x41,0x39,0x06,
  39                      0x36,0x49,0x41,0x29,0x46,0x48,0x48,0x29,
  40                      0x26,0x20,0x11,0x12,0x2C,0x21,0x19,0x06},
  41                      {0x00,0x34,0x4A,0xCA,0x4A,0x61,0x59,0x01,//马里奥左静止 3
  42                      0x31,0xB9,0xCA,0xCC,0x30,0x00,0x00,0x00,
  43                      0x0C,0x32,0x79,0xAF,0xA5,0xA4,0x4E,0x27,
  44                      0x25,0x68,0xB8,0x90,0x91,0x69,0x06,0x00},
  45                      
  46                      {0x06,0x39,0x41,0x8D,0x4A,0x62,0x59,0x01,//马里奥左奔跑 4
  47                      0x31,0xB9,0xCA,0xCC,0x30,0x80,0x00,0x00,
  48                      0x06,0x19,0x21,0x2C,0x12,0x11,0x20,0x26,
  49                      0x29,0x48,0x48,0x46,0x29,0x41,0x49,0x36},
  50                      
  51                      {0x00,0x00,0x10,0x10,0x10,0xFE,0x08,0x88,//o 5
  52                      0x88,0x80,0x80,0x80,0x24,0x28,0x10,0x00,
  53                      0x00,0x08,0x1C,0x12,0x22,0x7F,0x01,0x10,
  54                      0x20,0x20,0x20,0x10,0x11,0x0E,0x00,0x00},
C51 COMPILER V9.54   FRAG_2                                                                07/13/2016 17:45:24 PAGE 2   

  55          
  56                      {0x00,0x00,0x84,0x78,0xA0,0x20,0x20,0xE2,//me 6
  57                      0x3C,0x20,0x40,0x80,0x00,0x00,0x00,0x00,
  58                      0x00,0x0F,0x10,0x10,0x08,0x05,0x02,0x05,
  59                      0x40,0x40,0x20,0x18,0x07,0x00,0x00,0x00},
  60          
  61                      {0x00,0x20,0x60,0x20,0x20,0x20,0xA0,0x60,//de 7
  62                      0x30,0x30,0x10,0x10,0x58,0x90,0x00,0x00,
  63                      0x00,0x00,0x00,0x00,0x00,0x1F,0x20,0x40,
  64                      0x40,0x40,0x40,0x41,0x02,0x04,0x01,0x00},
  65          
  66                      {0x00,0x00,0x00,0x00,0x00,0x00,0x04,0xF8,//to 8
  67                      0x80,0x80,0x60,0x40,0x00,0x00,0x00,0x00,
  68                      0x00,0x00,0x00,0x1C,0x22,0x41,0x41,0x41,
  69                      0x40,0x40,0x40,0x40,0x00,0x00,0x00,0x00},
  70          
  71                      {0x00,0x00,0x20,0x40,0x41,0x42,0x42,0x2A,//u 9
  72                      0x2A,0x24,0x20,0xC0,0x00,0x00,0x00,0x00,
  73                      0x00,0x00,0x00,0x00,0x40,0x40,0x40,0x20,
  74                      0x10,0x10,0x0C,0x03,0x00,0x00,0x00,0x00},
  75          
  76                      {0x00,0x00,0x00,0x00,0x00,0x00,0x02,0xFC,//yo A
  77                      0x40,0x40,0x20,0x30,0x20,0x00,0x00,0x00,
  78                      0x00,0x30,0x48,0x44,0x44,0x44,0x24,0x1F,
  79                      0x08,0x08,0x10,0x10,0x20,0x40,0x00,0x00},
  80          
  81                      {0x00,0x00,0x00,0x04,0x08,0x48,0x28,0x28,//ko B
  82                      0x18,0x08,0x08,0x00,0x00,0x00,0x00,0x00,
  83                      0x00,0x00,0x07,0x08,0x10,0x10,0x10,0x10,
  84                      0x10,0x10,0x10,0x18,0x10,0x00,0x00,0x00},
  85          
  86                      {0x00,0x80,0x80,0xC2,0xC4,0xA4,0xA4,0x92,//so C
  87                      0x4A,0x44,0x40,0x60,0x40,0x00,0x00,0x00,
  88                      0x00,0x00,0x00,0x00,0x00,0x0E,0x11,0x20,
  89                      0x20,0x20,0x20,0x20,0x00,0x00,0x00,0x00},
  90          
  91                      {0x00,0x80,0x60,0xF8,0x07,0x00,0x04,0x24,//shin D
  92                      0x24,0x25,0x26,0x24,0x24,0x24,0x04,0x00,
  93                      0x01,0x00,0x00,0xFF,0x00,0x00,0x00,0xF9,
  94                      0x49,0x49,0x49,0x49,0x49,0xF9,0x00,0x00},
  95          
  96                      {0x80,0x80,0x80,0xBE,0xA2,0xA2,0xA2,0xA2,//gou E
  97                      0xA2,0xA2,0xA2,0xBE,0x80,0x80,0x80,0x00,
  98                      0x00,0x00,0x00,0x06,0x05,0x04,0x04,0x04,
  99                      0x44,0x84,0x44,0x3C,0x00,0x00,0x00,0x00},
 100          
 101                      {0x80,0x70,0x00,0xFF,0x20,0x10,0x04,0x04,//tou F
 102                      0x04,0x04,0xFC,0x04,0x04,0x04,0x04,0x00,
 103                      0x80,0x60,0x18,0x07,0x08,0x30,0x00,0x00,
 104                      0x40,0x80,0x7F,0x00,0x00,0x00,0x00,0x00},
 105          
 106                      {0x00,0x40,0x40,0x44,0x44,0x44,0x44,0xC4,//te 10
 107                      0x44,0x44,0x46,0x44,0x60,0x40,0x00,0x00,
 108                      0x00,0x00,0x80,0x40,0x20,0x18,0x06,0x01,
 109                      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
 110          
 111                      {0x00,0x00,0x08,0x08,0x08,0x08,0x08,0x08,//su 11
 112                      0x88,0x68,0x18,0x00,0x00,0x00,0x00,0x00,
 113                      0x00,0x00,0x20,0x10,0x08,0x04,0x02,0x01,
 114                      0x02,0x04,0x08,0x10,0x30,0x00,0x00,0x00},
 115          
 116                      {0x00,0x00,0x00,0x00,0x00,0xFE,0x20,0x40,//to 12
C51 COMPILER V9.54   FRAG_2                                                                07/13/2016 17:45:24 PAGE 3   

 117                      0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
 118                      0x00,0x00,0x00,0x00,0x00,0x7F,0x00,0x00,
 119                      0x00,0x01,0x03,0x00,0x00,0x00,0x00,0x00},
 120          
 121                      {0x00,0x00,0x20,0x24,0x44,0x88,0x10,0x00,//shi 13
 122                      0x00,0x00,0x80,0x40,0x20,0x00,0x00,0x00,
 123                      0x00,0x00,0x10,0x20,0x20,0x10,0x08,0x04,
 124                      0x02,0x01,0x00,0x00,0x00,0x00,0x00,0x00},
 125          
 126                      {0x00,0x00,0x08,0x08,0x08,0x08,0x08,0x08,//su 14
 127                      0x88,0x68,0x18,0x00,0x00,0x00,0x00,0x00,
 128                      0x00,0x00,0x20,0x10,0x08,0x04,0x02,0x01,
 129                      0x02,0x04,0x08,0x10,0x30,0x00,0x00,0x00},
 130          
 131                      {0x00,0x40,0x40,0x44,0x44,0x44,0x44,0xC4,//te 15
 132                      0x44,0x44,0x46,0x44,0x60,0x40,0x00,0x00,
 133                      0x00,0x00,0x80,0x40,0x20,0x18,0x06,0x01,
 134                      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
 135          
 136                      {0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x38,//mu 16
 137                      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 138                      0x00,0x00,0x20,0x70,0x2C,0x23,0x20,0x20,
 139                      0x10,0x12,0x14,0x18,0x70,0x00,0x00,0x00},
 140          
 141                      {0x00,0x00,0x00,0xE0,0x18,0x04,0x02,0x00,//（ 17
 142                      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 143                      0x00,0x00,0x00,0x07,0x18,0x20,0x40,0x00,
 144                      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
 145          
 146                      {0x40,0xC0,0x40,0x40,0x40,0x60,0x1C,0x03,//白星 18
 147                      0x1C,0x60,0x40,0x40,0x40,0xC0,0x40,0x00,
 148                      0x00,0x00,0x41,0x39,0x26,0x10,0x10,0x08,
 149                      0x08,0x10,0x26,0x39,0x41,0x00,0x00,0x00},
 150          
 151                      {0x00,0x00,0x04,0x1C,0x64,0x84,0x04,0x04,//嘴 19
 152                      0x04,0x84,0x64,0x1C,0x04,0x00,0x00,0x00,
 153                      0x00,0x00,0x00,0x00,0x00,0x01,0x06,0x18,
 154                      0x06,0x01,0x00,0x00,0x00,0x00,0x00,0x00},
 155                      
 156                      {0x00,0x02,0x04,0x18,0xE0,0x00,0x00,0x00,//） 1A
 157                      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 158                      0x00,0x40,0x20,0x18,0x07,0x00,0x00,0x00,
 159                      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
 160                      
 161                      {0x40,0xC0,0xC0,0xC0,0xC0,0xE0,0xFC,0xFF,//黑星 1B
 162                      0xFC,0xE0,0xC0,0xC0,0xC0,0xC0,0x40,0x00,
 163                      0x00,0x00,0x41,0x39,0x3F,0x1F,0x1F,0x0F,
 164                      0x1F,0x1F,0x3F,0x39,0x41,0x00,0x00,0x00},
 165          
 166                      {0x00,0x00,0x00,0x00,0xC0,0x38,0x04,0x00,//youshou 1C
 167                      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 168                      0x00,0x60,0x18,0x07,0x00,0x00,0x00,0x00,
 169                      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
 170          
 171                      {0x00,0x04,0x38,0xC0,0x00,0x00,0x00,0x00,//zuoshou 1D
 172                      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 173                      0x00,0x00,0x00,0x01,0x06,0x38,0xC0,0x00,
 174                      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}
 175          
 176          
 177          
 178          };
C51 COMPILER V9.54   FRAG_2                                                                07/13/2016 17:45:24 PAGE 4   

 179          //数字字模表，根据自己需要更改 
 180          code unsigned char SZTAB[][16]={
 181                  {0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,//0 
 182                  0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00},
 183                  {0x00,0x00,0x10,0x10,0xF8,0x00,0x00,0x00,//1 
 184                  0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00},
 185                  {0x00,0x70,0x08,0x08,0x08,0x08,0xF0,0x00,//2 
 186                  0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00},
 187                  {0x00,0x30,0x08,0x08,0x08,0x88,0x70,0x00,//3 
 188                  0x00,0x18,0x20,0x21,0x21,0x22,0x1C,0x00},
 189                  {0x00,0x00,0x80,0x40,0x30,0xF8,0x00,0x00,//4 
 190                  0x00,0x06,0x05,0x24,0x24,0x3F,0x24,0x24},
 191                  {0x00,0xF8,0x88,0x88,0x88,0x08,0x08,0x00,//5 
 192                  0x00,0x19,0x20,0x20,0x20,0x11,0x0E,0x00},
 193                  {0x00,0xE0,0x10,0x88,0x88,0x90,0x00,0x00,//6 
 194                  0x00,0x0F,0x11,0x20,0x20,0x20,0x1F,0x00},
 195                  {0x00,0x18,0x08,0x08,0x88,0x68,0x18,0x00,//7 
 196                  0x00,0x00,0x00,0x3E,0x01,0x00,0x00,0x00},
 197                  {0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,//8 
 198                  0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00},
 199                  {0x00,0xF0,0x08,0x08,0x08,0x10,0xE0,0x00,//9 
 200                  0x00,0x01,0x12,0x22,0x22,0x11,0x0F,0x00}
 201          
 202          
 203          
 204          };
 205          //英文字模表，根据自己需要更改 
 206          code unsigned char EETAB[][16]={
 207                  {0x08,0xF8,0x08,0x00,0x00,0x00,0x00,0x00,//L 0
 208                  0x20,0x3F,0x20,0x20,0x20,0x20,0x30,0x00},
 209                  {0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,//O 1
 210                  0x0F,0x10,0x20,0x20,0x20,0x10,0x0F,0x00},
 211                  {0x00,0x00,0xC0,0x38,0xE0,0x00,0x00,0x00,//A 2
 212                  0x20,0x3C,0x23,0x02,0x02,0x27,0x38,0x20},
 213                  {0x08,0xF8,0x08,0x08,0x08,0x10,0xE0,0x00,//D 3
 214                  0x20,0x3F,0x20,0x20,0x20,0x10,0x0F,0x00},
 215                  {0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,//I 4
 216                  0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00},
 217                  {0x08,0xF8,0x30,0xC0,0x00,0x08,0xF8,0x08,//N 5
 218                  0x20,0x3F,0x20,0x00,0x07,0x18,0x3F,0x00},
 219                  {0xC0,0x30,0x08,0x08,0x08,0x38,0x00,0x00,//G 6
 220                  0x07,0x18,0x20,0x20,0x22,0x1E,0x02,0x00},
 221                  {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//. 7
 222                  0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00}, 
 223          
 224                  {0x08,0xF8,0xF8,0x00,0xF8,0xF8,0x08,0x00,//M 8
 225                  0x20,0x3F,0x01,0x3E,0x01,0x3F,0x20,0x00},
 226          
 227                  {0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,//E 9
 228                  0x20,0x3F,0x20,0x20,0x23,0x20,0x18,0x00},
 229          
 230                  {0x00,0x70,0x88,0x08,0x08,0x08,0x38,0x00,//S A
 231                  0x00,0x38,0x20,0x21,0x21,0x22,0x1C,0x00},
 232                  
 233                  {0x18,0x08,0x08,0xF8,0x08,0x08,0x18,0x00,//T B
 234                  0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00},
 235          
 236                  {0x08,0xF8,0x88,0x88,0x88,0x88,0x70,0x00,//R C
 237                  0x20,0x3F,0x20,0x00,0x03,0x0C,0x30,0x20},
 238                
 239                  {0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,//E D
 240                  0x20,0x3F,0x20,0x20,0x23,0x20,0x18,0x00},
C51 COMPILER V9.54   FRAG_2                                                                07/13/2016 17:45:24 PAGE 5   

 241          
 242                  {0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,//U E
 243                  0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00}
 244          
 245          
 246          
 247          };
 248          
 249          unsigned char lcd_cache[4];   //LCD显示缓存
 250          // 1.写指令代码子程序(E1)
 251          void WriteCommandE1()
 252          {
 253   1        while(CRADD1 & 0x80);
 254   1        CWADD1 = Command;
 255   1      }
 256          
 257          // 2.写显示数据子程序(E1)
 258          void WriteDataE1()
 259          {
 260   1        while(CRADD1 & 0x80);
 261   1        DWADD1 = LCDData;
 262   1      }
 263          
 264          // 3.读显示数据子程序(E1)
 265          void ReadDataE1()
 266          {
 267   1        while(CRADD1 & 0x80);
 268   1        LCDData = DRADD1;
 269   1      }
 270          
 271          // 4.写指令代码子程序(E2)
 272          void WriteCommandE2()
 273          {
 274   1        while(CRADD2 & 0x80);
 275   1        CWADD2 = Command;
 276   1      }
 277          
 278          // 5.写显示数据子程序(E2)
 279          void WriteDataE2()
 280          {
 281   1        while(CRADD2 & 0x80);
 282   1        DWADD2 = LCDData;
 283   1      }
 284          
 285          // 6.读显示数据子程序(E2)
 286          void ReadDataE2()
 287          {
 288   1        while(CRADD2 & 0x80);
 289   1        LCDData = DRADD2;
 290   1      }
 291          
 292          //LCD初始化接口
 293          void Init()
 294          {
 295   1        Command = 0xe2;
 296   1        WriteCommandE1();
 297   1        WriteCommandE2();
 298   1      
 299   1        Command = 0xa4;
 300   1        WriteCommandE1();
 301   1        WriteCommandE2();
 302   1      
C51 COMPILER V9.54   FRAG_2                                                                07/13/2016 17:45:24 PAGE 6   

 303   1        Command = 0xa9;
 304   1        WriteCommandE1();
 305   1        WriteCommandE2();
 306   1      
 307   1        Command = 0xa0;
 308   1        WriteCommandE1();
 309   1        WriteCommandE2();
 310   1      
 311   1        Command = 0xc0;
 312   1        WriteCommandE1();
 313   1        WriteCommandE2();
 314   1      
 315   1        Command = 0xaf;
 316   1        WriteCommandE1();
 317   1        WriteCommandE2();
 318   1      }
 319          
 320          // 清屏接口
 321          void Clear()
 322          {
 323   1        unsigned char i,j;
 324   1      
 325   1        i = 0;
 326   1        do {
 327   2      
 328   2          Command = (i + 0xb8); // 页地址设置
 329   2          WriteCommandE1();
 330   2          WriteCommandE2();
 331   2      
 332   2          Command = 0x00;      // 列地址设置为"0"
 333   2          WriteCommandE1();
 334   2          WriteCommandE2();
 335   2      
 336   2          j = 0x50;            // 一页清 80个字节
 337   2          do {
 338   3            LCDData = 0x00;    // 显示数据为"0"
 339   3            WriteDataE1();
 340   3            WriteDataE2();
 341   3          }while(--j !=0);     // 页内字节清零循环
 342   2      
 343   2        }while(++i !=4);       // 页地址暂存器加一
 344   1                               // 显示区清零循环
 345   1      }
 346          
 347          
 348          // 中文显示接口
 349          void WriteCHN16x16()
 350          {
 351   1        unsigned char i,j,k;
 352   1        i = 0;
 353   1        j = 0;
 354   1        while(j<2) {
 355   2          Command = ((Page_ + j) & 0x03) | 0xb8;   // 设置页地址
 356   2          WriteCommandE1();
 357   2          WriteCommandE2();
 358   2          k = Column;                   // 列地址值
 359   2          while(k < Column + 16){
 360   3            if (k < PD1) {              // 为左半屏显示区域(E1)
 361   4              Command = k;
 362   4              WriteCommandE1();         // 设置列地址值
 363   4              LCDData = CCTAB[Code_][i]; // 取汉字字模数据
 364   4              WriteDataE1();            // 写字模数据
C51 COMPILER V9.54   FRAG_2                                                                07/13/2016 17:45:24 PAGE 7   

 365   4            } else{                     // 为右半屏显示区域(E2)
 366   4              Command = k-PD1;
 367   4              WriteCommandE2();         // 设置列地址值
 368   4              LCDData = CCTAB[Code_][i]; // 取汉字字模数据
 369   4              WriteDataE2();            // 写字模数据
 370   4            };
 371   3      
 372   3            i++;
 373   3            if( ++k >= PD1 * 2) break;  // 列地址是否超出显示范围
 374   3          } ;
 375   2          j++;
 376   2        };
 377   1      }
 378          ///////////////////////////////////////////////////
 379          
 380          void WriteEN8x16()                //字母显示接口
 381          {
 382   1        unsigned char i,j,k;  
 383   1         i = 0;
 384   1         j = 0;
 385   1        while(j<2) {
 386   2          Command = ((Page_ + j) & 0x03) | 0xb8;   
 387   2          WriteCommandE1( );
 388   2          WriteCommandE2( );
 389   2          k = Column;                   
 390   2          while(k < Column + 8){
 391   3            if (k < PD1) {             
 392   4              Command = k;
 393   4              WriteCommandE1( );         
 394   4              LCDData = EETAB[Code_][i]; 
 395   4              WriteDataE1( );            
 396   4            } else{                     
 397   4              Command = k-PD1;
 398   4              WriteCommandE2( );         
 399   4              LCDData = EETAB[Code_][i]; 
 400   4              WriteDataE2( );           
 401   4            };
 402   3            i++;
 403   3            if( ++k >= PD1 * 2) break;  
 404   3          };
 405   2          j++;
 406   2        };
 407   1      }
 408          
 409          
 410          void WriteSZ8x16()                    //数字显示接口
 411          {
 412   1        unsigned char i,j,k;  
 413   1         i = 0;
 414   1         j = 0;
 415   1        while(j<2) {
 416   2          Command = ((Page_ + j) & 0x03) | 0xb8;   
 417   2          WriteCommandE1( );
 418   2          WriteCommandE2( );
 419   2          k = Column;                   
 420   2          while(k < Column + 8){
 421   3            if (k < PD1) {             
 422   4              Command = k;
 423   4              WriteCommandE1( );         
 424   4              LCDData = SZTAB[Code_][i]; 
 425   4              WriteDataE1( );            
 426   4            } else{                     
C51 COMPILER V9.54   FRAG_2                                                                07/13/2016 17:45:24 PAGE 8   

 427   4              Command = k-PD1;
 428   4              WriteCommandE2( );         
 429   4              LCDData = SZTAB[Code_][i]; 
 430   4              WriteDataE2( );           
 431   4            };
 432   3            i++;
 433   3            if( ++k >= PD1 * 2) break;  
 434   3          };
 435   2          j++;
 436   2        };
 437   1      }
 438          /////////////////////////////////////////////////////////////////////////////
 439          ////////以下根据自己需要更改
 440          /////////////////////////////////////////////////
 441          void start(){
 442   1          int n=0x08;
 443   1          int p;
 444   1          Page_ = 0x03;                     //G
 445   1          Column = n;
 446   1          Code_ = 0x06;
 447   1          WriteEN8x16();
 448   1          n=n+8;
 449   1          for(p=0;p<30000;p++);
 450   1          Page_ = 0x03;                     //A
 451   1          Column = n;
 452   1          Code_ = 0x02;
 453   1          WriteEN8x16();
 454   1          n=n+8;
 455   1          for(p=0;p<30000;p++);
 456   1          Page_ = 0x03;                     //M
 457   1          Column = n;
 458   1          Code_ = 0x08;
 459   1          WriteEN8x16();
 460   1          n=n+8;
 461   1          for(p=0;p<30000;p++);             
 462   1          Page_ = 0x03;                     //E
 463   1          Column = n;
 464   1          Code_ = 0x09;
 465   1          WriteEN8x16();
 466   1          n=n+8;
 467   1          for(p=0;p<30000;p++);
 468   1          Page_ = 0x03;                     //S
 469   1          Column = n;
 470   1          Code_ = 0x0A;
 471   1          WriteEN8x16();
 472   1          n=n+8;
 473   1          for(p=0;p<30000;p++);
 474   1          Page_ = 0x03;                     //T
 475   1          Column = n;
 476   1          Code_ = 0x0B;
 477   1          WriteEN8x16();
 478   1          n=n+8;
 479   1          for(p=0;p<30000;p++);
 480   1          Page_ = 0x03;                     //A
 481   1          Column = n;
 482   1          Code_ = 0x02;
 483   1          WriteEN8x16();
 484   1          n=n+8;
 485   1          for(p=0;p<30000;p++);
 486   1          Page_ = 0x03;                     //R
 487   1          Column = n;
 488   1          Code_ = 0x0C;
C51 COMPILER V9.54   FRAG_2                                                                07/13/2016 17:45:24 PAGE 9   

 489   1          WriteEN8x16();
 490   1          n=n+8;
 491   1          for(p=0;p<30000;p++);
 492   1          Page_ = 0x03;                     //T
 493   1          Column = n;
 494   1          Code_ = 0x0B;
 495   1          WriteEN8x16();
 496   1          n=n+8;
 497   1          for(p=0;p<30000;p++);       
 498   1      }
 499          /////////////////////////////////////////////////////////////////
 500          //选择界面
 501          void select(){
 502   1          Clear();
 503   1          WriteEN8x16();
 504   1          Page_ = 0x03;                     //D
 505   1          Column =0x00;
 506   1          Code_ = 0x03;
 507   1          WriteEN8x16();
 508   1          Page_ = 0x03;                     //E
 509   1          Column =0x08;
 510   1          Code_ = 0x0D;
 511   1          WriteEN8x16();
 512   1          
 513   1          Page_ = 0x03;                     //M
 514   1          Column =0x18;
 515   1          Code_ = 0x08;
 516   1          WriteEN8x16();
 517   1          Page_ = 0x03;                     //U
 518   1          Column =0x20;
 519   1          Code_ = 0x0E;
 520   1          WriteEN8x16();
 521   1            
 522   1          Page_ = 0x03;                     //M
 523   1          Column =0x30;
 524   1          Code_ = 0x08;
 525   1          WriteEN8x16();
 526   1          Page_ = 0x03;                     //A
 527   1          Column =0x38;
 528   1          Code_ = 0x02;
 529   1          WriteEN8x16();  
 530   1      
 531   1          Page_ = 0x03;                     //L
 532   1          Column =0x48;
 533   1          Code_ = 0x00;
 534   1          WriteEN8x16();
 535   1          Page_ = 0x03;                     //D
 536   1          Column =0x50;
 537   1          Code_ = 0x03;
 538   1          WriteEN8x16();
 539   1          
 540   1          Page_ = 0x03;                     //L
 541   1          Column =0x60;
 542   1          Code_ = 0x00;
 543   1          WriteEN8x16();
 544   1          Page_ = 0x03;                     //S
 545   1          Column =0x68;
 546   1          Code_ = 0x0A;
 547   1          WriteEN8x16();    
 548   1      
 549   1      }
 550          
C51 COMPILER V9.54   FRAG_2                                                                07/13/2016 17:45:24 PAGE 10  

 551          /////////////////////////////////////////////////
 552          void print(unsigned int a2){                //通关动画
 553   1          int i=0;
 554   1          Clear();
 555   1          Page_ = 0x03;
 556   1          Column = 0x10;
 557   1          Code_ = a2;
 558   1          WriteCHN16x16();
 559   1          a2++;
 560   1          for(i=0;i<30000;i++)
 561   1          Page_ = 0x03;
 562   1          Column = 0x20;
 563   1          Code_ = a2;
 564   1          WriteCHN16x16();  
 565   1          a2++;
 566   1          for(i=0;i<30000;i++)  
 567   1          Page_ = 0x03;
 568   1          Column = 0x30;
 569   1          Code_ = a2;
 570   1          WriteCHN16x16();
 571   1          a2++;
 572   1          for(i=0;i<30000;i++)  
 573   1          Page_ = 0x03;
 574   1          Column = 0x40;
 575   1          Code_ = a2;
 576   1          WriteCHN16x16();
 577   1          a2++;
 578   1          for(i=0;i<30000;i++)    
 579   1          Page_ = 0x03;
 580   1          Column = 0x50;
 581   1          Code_ = a2;
 582   1          WriteCHN16x16();
 583   1          a2++;
 584   1          for(i=0;i<30000;i++)    
 585   1          Page_ = 0x03;
 586   1          Column = 0x50;
 587   1          Code_ = a2;
 588   1          WriteCHN16x16();
 589   1      }
 590          
 591          
 592          /////////////////////////////////////////////////////////////////////////////
 593          void game(unsigned int a,unsigned int b){                  //游戏接口
 594   1        unsigned int i=0;
 595   1            Clear();
 596   1            Page_ = 0x03;
 597   1            Column = 0x00;
 598   1            Code_ = 0x01;
 599   1            WriteCHN16x16();
 600   1            Page_ = 0x03;                   //终点刷新
 601   1            Column = 0x70;
 602   1            Code_ = 0x00;
 603   1            WriteCHN16x16();
 604   1      
 605   1        while(1){
 606   2        if(TestKey()){
 607   3            key=GetKey();
 608   3            switch(key){
 609   4      
 610   4              case 0x0b:
 611   4              Clear();                        //先左静止
 612   4              Page_ = 0x03;
C51 COMPILER V9.54   FRAG_2                                                                07/13/2016 17:45:24 PAGE 11  

 613   4              Column = a;
 614   4              Code_ = 0x03;
 615   4              WriteCHN16x16();  
 616   4              
 617   4              Page_ = 0x03;                   //终点刷新
 618   4              Column = 0x70;
 619   4              Code_ = 0x00;
 620   4              WriteCHN16x16();
 621   4              for(i=0;i<300;i++);               //延时
 622   4            
 623   4              Clear();                        
 624   4              Page_ = 0x03;                   //再左奔跑
 625   4              Column = a;
 626   4              Code_ = 0x04;
 627   4              WriteCHN16x16();
 628   4              Page_ = 0x03;                   //终点刷新
 629   4              Column = 0x70;
 630   4              Code_ = 0x00;
 631   4              WriteCHN16x16();
 632   4            if(a==0){             //判断是否在起点开始
 633   5                a=a;
 634   5                b=b;
 635   5            }
 636   4            else{
 637   5                a=a-16;
 638   5                b--;                          //行动计数
 639   5            }
 640   4              for(i=0;i<300;i++);               //延时
 641   4            
 642   4              Clear();                        
 643   4              Page_ = 0x03;                   //再左奔跑
 644   4              Column = a;
 645   4              Code_ = 0x04;
 646   4              WriteCHN16x16();
 647   4              Page_ = 0x03;                   //终点刷新
 648   4              Column = 0x70;
 649   4              Code_ = 0x00;
 650   4              WriteCHN16x16();
 651   4              
 652   4              for(i=0;i<300;i++);               //延时
 653   4              
 654   4              Clear();                        
 655   4              Page_ = 0x03;                   //再左静止
 656   4              Column = a;
 657   4              Code_ = 0x03;
 658   4              WriteCHN16x16();
 659   4              Page_ = 0x03;                   //终点刷新
 660   4              Column = 0x70;
 661   4              Code_ = 0x00;
 662   4              WriteCHN16x16();
 663   4              
 664   4              break;
 665   4              
 666   4              case 0x0f:
 667   4                
 668   4              Clear();                        
 669   4              
 670   4              Page_ = 0x03;                   //右静止
 671   4              Column = a;
 672   4              Code_ = 0x01;
 673   4              WriteCHN16x16();
 674   4                  
C51 COMPILER V9.54   FRAG_2                                                                07/13/2016 17:45:24 PAGE 12  

 675   4              Page_ = 0x03;                   //终点刷新
 676   4              Column = 0x70;
 677   4              Code_ = 0x00;
 678   4              WriteCHN16x16();
 679   4              
 680   4              for(i=0;i<300;i++);   
 681   4              Clear();
 682   4                 
 683   4              Page_ = 0x03;                   //右奔跑
 684   4              Column = a;
 685   4              Code_ = 0x02;
 686   4              WriteCHN16x16();
 687   4                    
 688   4              Page_ = 0x03;                   //终点刷新
 689   4              Column = 0x70;
 690   4              Code_ = 0x00;
 691   4              WriteCHN16x16();        
 692   4              
 693   4              if(b==7){         
 694   5                print(0x05);                        //游戏通关             
 695   5                return;                         //返回开始菜单          
 696   5              }
 697   4              else{
 698   5                a=a+16;
 699   5                b++;
 700   5              }
 701   4              for(i=0;i<300;i++);               //延时
 702   4              
 703   4              Clear();
 704   4               
 705   4              Page_ = 0x03;                   //右奔跑
 706   4              Column = a;
 707   4              Code_ = 0x02;
 708   4              WriteCHN16x16();
 709   4                  
 710   4              Page_ = 0x03;                   //终点刷新
 711   4              Column = 0x70;
 712   4              Code_ = 0x00;
 713   4              WriteCHN16x16();
 714   4              
 715   4              for(i=0;i<300;i++);               //延时      
 716   4              
 717   4              Clear();
 718   4               
 719   4              Page_ = 0x03;                   //右静止
 720   4              Column = a;
 721   4              Code_ = 0x01;
 722   4              WriteCHN16x16();
 723   4                  
 724   4              Page_ = 0x03;                   //终点刷新
 725   4              Column = 0x70;
 726   4              Code_ = 0x00;
 727   4              WriteCHN16x16();
 728   4              break;
 729   4              
 730   4              case 0x0e:return;break;
 731   4              
 732   4              default:break;
 733   4            }
 734   3            
 735   3            
 736   3            }
C51 COMPILER V9.54   FRAG_2                                                                07/13/2016 17:45:24 PAGE 13  

 737   2        }
 738   1      }
 739          /////////////////////////////////////////////////////////////////////////////
 740          void dyna(unsigned int cs){               //动态显示接口
 741   1        int j=0;
 742   1        int i;
 743   1        int q;
 744   1        int q1;
 745   1        if(cs==0){
 746   2          i=ws;
 747   2        }
 748   1        else{
 749   2          i=bs;
 750   2        }   
 751   1        q=32;
 752   1        
 753   1          Page_ = 0x02;
 754   1          Column = q;
 755   1          Code_ =i;
 756   1          WriteCHN16x16();
 757   1          q=q+32;
 758   1          Page_ = 0x02;
 759   1          Column = q;
 760   1          Code_ = i;
 761   1          WriteCHN16x16();
 762   1          Page_ = 0x02;
 763   1          Column = 0x10;
 764   1          Code_ = 0x17;
 765   1          WriteCHN16x16();
 766   1          Page_ = 0x02;
 767   1          Column = 0x30;
 768   1          Code_ = 0x19;
 769   1          WriteCHN16x16();
 770   1          Page_ = 0x02;
 771   1          Column = 0x50;
 772   1          Code_ = 0x1A;
 773   1          WriteCHN16x16();
 774   1          if(flag==0&&flag1==1) {
 775   2          Page_ = 0x02;
 776   2          Column = 0x60;
 777   2          Code_ = 0x1C;
 778   2          WriteCHN16x16();
 779   2          }
 780   1          if(flag==1&&flag1==0) {
 781   2          Page_ = 0x02;
 782   2          Column = 0x00;
 783   2          Code_ = 0x1D;
 784   2          WriteCHN16x16();    
 785   2          }
 786   1          
 787   1             //东西向
 788   1         lcd_cache[0]=count/10;         //高位
 789   1         lcd_cache[1]=count%10;         //低位
 790   1      
 791   1         lcd_cache[0]=Disp_Tab2[lcd_cache[0]];
 792   1         lcd_cache[1]=Disp_Tab2[lcd_cache[1]];
 793   1      
 794   1         //南北向
 795   1         lcd_cache[2]=count1/10;         //高位
 796   1         lcd_cache[3]=count1%10;         //低位
 797   1      
 798   1         lcd_cache[2]=Disp_Tab2[lcd_cache[2]];
C51 COMPILER V9.54   FRAG_2                                                                07/13/2016 17:45:24 PAGE 14  

 799   1         lcd_cache[3]=Disp_Tab2[lcd_cache[3]];
 800   1            
 801   1         q=0x20;
 802   1         q1=0x40;
 803   1         
 804   1          Page_ = 0x04;
 805   1          Column = q;
 806   1          Code_ = lcd_cache[0];
 807   1          WriteSZ8x16();
 808   1          q=q+8;
 809   1          Page_ = 0x04;
 810   1          Column = q;
 811   1          Code_ = lcd_cache[1];
 812   1          WriteSZ8x16();
 813   1          Page_ = 0x04;
 814   1          Column = q1;
 815   1          Code_ = lcd_cache[2];
 816   1          WriteSZ8x16();
 817   1          q1=q1+8;
 818   1          Page_ = 0x04;
 819   1          Column = q1;
 820   1          Code_ = lcd_cache[3];
 821   1          WriteSZ8x16();
 822   1      
 823   1      }
 824          
 825          
 826          /////////////////////////////////////////////////////////
 827          void print_ini2(){                        //显示LOADING接口
 828   1        
 829   1        Page_ = 0x02;
 830   1        Column = 0x00;
 831   1        Code_ = 0x00;
 832   1        WriteEN8x16();
 833   1      
 834   1        Page_ = 0x02;
 835   1        Column = 0x08;
 836   1        Code_ = 0x01;
 837   1        WriteEN8x16();
 838   1      
 839   1        Page_ = 0x02;
 840   1        Column = 0x10;
 841   1        Code_ = 0x02;
 842   1        WriteEN8x16();
 843   1      
 844   1        Page_ = 0x02;
 845   1        Column = 0x18;
 846   1        Code_ = 0x03;
 847   1        WriteEN8x16();
 848   1      
 849   1        Page_ = 0x02;
 850   1        Column = 0x20;
 851   1        Code_ = 0x04;
 852   1        WriteEN8x16();
 853   1      
 854   1        Page_ = 0x02;
 855   1        Column = 0x28;
 856   1        Code_ = 0x05;
 857   1        WriteEN8x16();
 858   1        
 859   1        Page_ = 0x02;
 860   1        Column = 0x30;
C51 COMPILER V9.54   FRAG_2                                                                07/13/2016 17:45:24 PAGE 15  

 861   1        Code_ = 0x06;
 862   1        WriteEN8x16();
 863   1        
 864   1        Page_ = 0x02;
 865   1        Column = 0x38;
 866   1        Code_ = 0x07;
 867   1        WriteEN8x16();
 868   1        
 869   1        Page_ = 0x02;
 870   1        Column = 0x40;
 871   1        Code_ = 0x07;
 872   1        WriteEN8x16();
 873   1        
 874   1        Page_ = 0x02;
 875   1        Column = 0x48;
 876   1        Code_ = 0x07;
 877   1        WriteEN8x16();
 878   1        
 879   1      }
 880          
 881          
 882          
 883          void LCD_show(unsigned int n){                //LOADING接口
 884   1        int j=0;
 885   1        int p;
 886   1        Clear();
 887   1      
 888   1        for(j;j<14;j++){  
 889   2          p=0;
 890   2          print_ini2(); 
 891   2          Page_ = 0x04;
 892   2          Column = n;
 893   2          Code_ = 0x07;
 894   2          WriteEN8x16();
 895   2          n=n+8;
 896   2          for(p;p<30000;p++);
 897   2        }   
 898   1      }
 899          
 900          void LCD_show_2(unsigned int a1){             //动画接口   a1根据需要更改
 901   1        int j=0;
 902   1        int i=0;
 903   1        int p;
 904   1        int q;
 905   1        int k=0;
 906   1        int s=0;
 907   1        int cs=0;//星星闪烁标志
 908   1        Clear();
 909   1        a1=0x0A;
 910   1        
 911   1        q=0;
 912   1        for(j;j<3;j++){
 913   2          p=0;  
 914   2          Page_ = 0x03;
 915   2          Column = q;
 916   2          Code_ = a1;
 917   2          WriteCHN16x16();
 918   2          q=q+32;
 919   2          a1++;
 920   2          for(p;p<30000;p++);
 921   2        } 
 922   1        Clear();
C51 COMPILER V9.54   FRAG_2                                                                07/13/2016 17:45:24 PAGE 16  

 923   1        j=0;    
 924   1      
 925   1        q=0;
 926   1        for(j;j<6;j++){     
 927   2          p=0;
 928   2          Page_ = 0x02;
 929   2          Column = q;
 930   2          Code_ = a1;
 931   2          WriteCHN16x16();
 932   2          q=q+16;
 933   2          a1++;
 934   2          for(p;p<30000;p++);
 935   2        } 
 936   1        j=0;    
 937   1      
 938   1        q=0;
 939   1        for(j;j<4;j++){     
 940   2          p=0;
 941   2          Page_ = 0x04;
 942   2          Column = q;
 943   2          Code_ = a1;
 944   2          WriteCHN16x16();
 945   2          q=q+32;
 946   2          a1++;
 947   2          for(p;p<30000;p++);
 948   2        } 
 949   1        
 950   1          Clear();
 951   1          
 952   1          for(i;i<20;i++){    //动画10帧
 953   2            
 954   2          j=0;    
 955   2          q=0;
 956   2          for(j;j<7;j++){     //刷新一次动画
 957   3            p=0;
 958   3            if(cs==0){
 959   4            Page_ = 0x03;
 960   4            Column = q;
 961   4            Code_ = bs;
 962   4            WriteCHN16x16();}
 963   3            else{
 964   4            Page_ = 0x03;
 965   4            Column = q;
 966   4            Code_ = ws;
 967   4            WriteCHN16x16();
 968   4            }
 969   3            q=q+16;
 970   3            cs=~cs;}
 971   2            for(p;p<30000;p++);           
 972   2          j=0;    
 973   2          q=0;
 974   2          for(j;j<7;j++){     //刷新一次动画
 975   3            p=0;
 976   3            if(cs==0){
 977   4            Page_ = 0x03;
 978   4            Column = q;
 979   4            Code_ = bs;
 980   4            WriteCHN16x16();}
 981   3            else{
 982   4            Page_ = 0x03;
 983   4            Column = q;
 984   4            Code_ = ws;
C51 COMPILER V9.54   FRAG_2                                                                07/13/2016 17:45:24 PAGE 17  

 985   4            WriteCHN16x16();
 986   4            }
 987   3            q=q+16;
 988   3            cs=~cs;}
 989   2            for(p;p<30000;p++);
 990   2          
 991   2        }   
 992   1        Clear();
 993   1      }
 994          
 995          /////////////////////////////////////////////////
 996          void op(unsigned int p){          
 997   1          Clear();        //清屏
 998   1        LCD_show(0);
 999   1        for(p;p<30;p++);
1000   1        Clear();
1001   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3687    ----
   CONSTANT SIZE    =   1370    ----
   XDATA SIZE       =     17      42
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
