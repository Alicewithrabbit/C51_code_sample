C51 COMPILER V9.54   FRAG_3                                                                07/13/2016 17:45:24 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE FRAG_3
OBJECT MODULE PLACED IN .\Objects\frag_3.obj
COMPILER INVOKED BY: E:\Keil_v5\C51\BIN\C51.EXE frag_3.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\frag_3.lst) TABS(2) OBJECT(.\Objects\frag_3.obj)

line level    source

   1          #include<reg52.h>
   2          #include<absacc.h>
   3          #include"frag1.h"
   4          #include"frag2.h"
   5          #include"frag3.h"
   6          #include"frag4.h"
   7          #define PA XBYTE [0x7ffc]
   8          #define PB XBYTE [0x7ffd]
   9          #define PC XBYTE [0x7ffe]
  10          #define COM XBYTE [0x7fff]
  11          // 此表为 LED 的字模    
  12          // 0   1   2   3   4   5   6   7   8   9   clear
  13          unsigned char code Disp_Tab[] = {0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x00};
  14          unsigned char count_1s,count,count1,flag_1s;
  15          unsigned char flag,flag1=1;    //0->red;   1->green;   2->yellow
  16          unsigned char led_cache[4];   //显示数据缓存
  17          void zd_ini()         //中断初始化程序接口 
  18          {
  19   1        TMOD=0x11;          //定时器0,1选择工作方式1，0001 0001b
  20   1        TH0=0X3C;           //定时50ms初值  
  21   1        TL0=0XB0;
  22   1        ET0=1;              //开定时器中断
  23   1        EA=1;               //开总中断
  24   1        TR0=1;
  25   1        ET1=1;              //开启定时器0
  26   1      }
  27          
  28          void system_ini()     //系统初始化接口
  29          {
  30   1        flag=0;
  31   1        count_1s=20;        //20*50ms=1s;   
  32   1        count=63;
  33   1        count1=60;
  34   1        zd_ini();           //调用中断初始化程序
  35   1        LED_1=0;
  36   1        LED_2=0;
  37   1        LED_3=0;
  38   1        LED_4=0;
  39   1        LED_5=0;
  40   1        LED_6=0;
  41   1        LED_7=0;
  42   1        LED_8=0;  
  43   1      }
  44          
  45          void timer_0() interrupt 1    //定时器中断0接口
  46          {
  47   1        TH0=0X3C;                   //继续赋初值  
  48   1        TL0=0XB0;
  49   1        if(--count_1s)              //如果没到1s，则返回
  50   1        { return;}
  51   1        //到1s
  52   1        flag_1s=1;                  //置位标志位
  53   1        count_1s=20;
  54   1      }
C51 COMPILER V9.54   FRAG_3                                                                07/13/2016 17:45:24 PAGE 2   

  55          
  56          void show()                   //用于计算和查表转换相应的待显示数接口
  57          {
  58   1         //东西向
  59   1         led_cache[0]=count/10;         //高位
  60   1         led_cache[1]=count%10;         //低位
  61   1      
  62   1         led_cache[0]=Disp_Tab[led_cache[0]];
  63   1         led_cache[1]=Disp_Tab[led_cache[1]];
  64   1      
  65   1         //南北向
  66   1         led_cache[2]=count1/10;         //高位
  67   1         led_cache[3]=count1%10;         //低位
  68   1      
  69   1         led_cache[2]=Disp_Tab[led_cache[2]];
  70   1         led_cache[3]=Disp_Tab[led_cache[3]];
  71   1      }
  72          
  73          void update()           //更新count和count1的值，切换LED灯接口
  74          {
  75   1      
  76   1            
  77   1            if(flag==0)
  78   1              {
  79   2                
  80   2                if(count==0)
  81   2                  {////////////////////////////////
  82   3                    flag=1;        //绿灯亮
  83   3                    flag1=0;       //红灯1亮
  84   3                    count=60;      
  85   3                    count1=63;
  86   3                  }
  87   2                  
  88   2                  else if(count1==0)
  89   2                  { ///////////////////////////
  90   3                      
  91   3                      flag1=2;  //黄灯1亮
  92   3                      count1=3;
  93   3                  }
  94   2                  
  95   2                  else
  96   2                  {             
  97   3                      count--;
  98   3                      count1--;
  99   3                  }
 100   2                  
 101   2              }
 102   1              
 103   1            else if(flag==1)
 104   1            {
 105   2              
 106   2              if(count==0)
 107   2              {/////////////////////////////////////
 108   3                flag=2;        //黄灯亮
 109   3                count=3;
 110   3              }
 111   2              else
 112   2                {
 113   3                  count--;
 114   3                        count1--;
 115   3                }
 116   2            }
C51 COMPILER V9.54   FRAG_3                                                                07/13/2016 17:45:24 PAGE 3   

 117   1            else
 118   1            {
 119   2              if(count==0)
 120   2              {////////////////////////////////////////
 121   3                flag=0;        //红灯亮
 122   3                  flag1=1;       //绿灯1亮
 123   3                      count1=60;
 124   3                count=63;
 125   3              }
 126   2              else
 127   2                { 
 128   3                  count--;
 129   3                  count1--;
 130   3                }
 131   2            }
 132   1      
 133   1          if(flag==0&&flag1==1) {
 134   2          Page_ = 0x02;
 135   2          Column = 0x60;
 136   2          Code_ = 0x1C;
 137   2          WriteCHN16x16();
 138   2          }
 139   1          if(flag==1&&flag1==0) {
 140   2          Page_ = 0x02;
 141   2          Column = 0x00;
 142   2          Code_ = 0x1D;
 143   2          WriteCHN16x16();    
 144   2          }
 145   1          if(flag==2||flag1==2) {
 146   2          Clear();
 147   2        
 148   2          }
 149   1      
 150   1      
 151   1      }
 152          void disp()       //总的显示接口
 153          {
 154   1        int i;
 155   1        show(); //调用用于计算和查表转换相应的待显示数的模块
 156   1        P22=0;  //输出低位选通信号
 157   1        P23=0;
 158   1        P24=0;  
 159   1        PB=led_cache[0];
 160   1        for(i=0;i<30;i++);    //延时
 161   1        P22=1;  
 162   1        P23=0;
 163   1        P24=0;  
 164   1        PB=led_cache[1];
 165   1        for(i=0;i<30;i++);      //延时
 166   1        P22=0;  //输出低位选通信号
 167   1        P23=1;
 168   1        P24=0;  
 169   1        PB=led_cache[2];
 170   1        for(i=0;i<30;i++);    //延时
 171   1        P22=1;  
 172   1        P23=1;
 173   1        P24=0;  
 174   1        PB=led_cache[3];
 175   1        for(i=0;i<30;i++);    //延时
 176   1      }
 177          ////////////////////////////////////////////
 178          void LED_Activity(){
C51 COMPILER V9.54   FRAG_3                                                                07/13/2016 17:45:24 PAGE 4   

 179   1        int ret=1;
 180   1        while(ret)                      //这里根据自己需要改
 181   1        { 
 182   2          
 183   2          if(TestKey()){
 184   3            ret=0;
 185   3            Clear();
 186   3          }
 187   2          if(flag_1s)
 188   2          {
 189   3            update();       //更新显示    
 190   3            flag_1s=0;      //清除1秒时间到的标志
 191   3            dyna(cs);
 192   3            cs=~cs;     
 193   3          }
 194   2      
 195   2          disp();         //持续显示
 196   2        }   
 197   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    589    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =     10       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
