C51 COMPILER V9.54   MUSIC_PLAYER                                                          07/13/2016 17:45:25 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MUSIC_PLAYER
OBJECT MODULE PLACED IN .\Objects\music_player.obj
COMPILER INVOKED BY: E:\Keil_v5\C51\BIN\C51.EXE music_player.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.
                    -\Listings\music_player.lst) TABS(2) OBJECT(.\Objects\music_player.obj)

line level    source

   1          #include<reg52.h>
   2          #include"frag1.h"
   3          #include"frag2.h"
   4          #include"frag4.h"
   5          #include"musicplayer.h"
   6          unsigned char timer0h,timer0l,time,zt=1;
   7          //单片机晶振采用11.0592MHz
   8          // 频率-半周期数据表 高八位     本软件共保存了四个八度的28个频率数据
   9          code unsigned char FREQH[] = {
  10                       0xF2, 0xF3, 0xF5, 0xF5, 0xF6, 0xF7, 0xF8,    //低音1234567
  11                       0xF9, 0xF9, 0xFA, 0xFA, 0xFB, 0xFB, 0xFC, 0xFC,//1,2,3,4,5,6,7,i
  12                       0xFC, 0xFD, 0xFD, 0xFD, 0xFD, 0xFE,            //高音 234567
  13                       0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFF};   //超高音 1234567
  14                    
  15          // 频率-半周期数据表 低八位
  16          code unsigned char FREQL[] = {
  17                        0x42, 0xC1, 0x17, 0xB6, 0xD0, 0xD1, 0xB6,    //低音1234567
  18                        0x21, 0xE1, 0x8C, 0xD8, 0x68, 0xE9, 0x5B, 0x8F, //1,2,3,4,5,6,7,i
  19                        0xEE, 0x44, 0x6B, 0xB4, 0xF4, 0x2D,             //高音 234567
  20                        0x47, 0x77, 0xA2, 0xB6, 0xDA, 0xFA, 0x16};   //超高音 1234567
  21          //----------------------------------------------------------------------------------------------
  22          // 要想演奏不同的乐曲, 只需要修改这个数据表
  23          code unsigned char music[][500] ={ 
  24          // 送别数据表
  25                     {5,1,2, 3,1,3, 5,1,1, 1,2,3, 6,1,2, 1,2,2, 5,1,4, 5,1,2, 1,1,1, 2,1,1, 3,1,2, 2,1,1, 1,1,1, 2,1
             -,4,
  26                      5,1,2, 3,1,1, 5,1,1, 1,2,2, 7,1,1, 6,1,2, 1,2,2, 5,1,4, 5,1,2, 2,1,1, 3,1,1, 4,1,2, 7,0,1, 1,1
             -,4, 
  27                      6,1,2, 1,2,2, 1,2,4, 7,1,2, 6,1,1, 7,1,1, 1,2,4, 6,1,1, 7,1,1, 1,2,1, 6,1,1, 6,1,1, 5,1,1, 3,1,1, 
  28                      1,1,1, 2,1,8, 5,1,2, 3,1,1, 5,1,1, 1,2,2, 7,1,1, 6,1,2, 1,2,2, 5,1,4, 5,1,2, 2,1,1, 3,1,1, 4,1,2,
  29                      7,0,2, 1,1,4, 0,0,0}};
  30          ///////////////////////////////////////////////////////////////////////////////////////////////
  31          //音乐播放接口            
  32          void t1int() interrupt 3       //T1中断程序，控制发音的音调
  33              {
  34   1             TR1 = 0;                      //先关闭T1
  35   1             MusicPlayer = !MusicPlayer;           //输出方波, 发音          
  36   1             TH1 = timer0h;               //下次的中断时间, 这个时间, 控制音调高低
  37   1             TL1 = timer0l;
  38   1             TR1 = 1;                     //启动T1
  39   1          }
  40          /////////////////////////////////////////////////////////////////////////////////////////////////
  41          void delay_music(unsigned char t)    //延时子函数，控制发音的时间长度
  42               {
  43   1              unsigned char t1;
  44   1              unsigned long t2;
  45   1              for(t1 = 0; t1 < t; t1++)          //嵌套循环, 共延时t个半拍
  46   1              for(t2 = 0; t2 < 8000; t2++); //延时期间, 可进入T1中断去发音
  47   1              TR1 = 0;                        //关闭T1, 停止发音
  48   1           }
  49          ////////////////////////////////////////////////////////////////////////////////////////////////
  50          
  51          void song()                    //演奏一个音符
  52               {
C51 COMPILER V9.54   MUSIC_PLAYER                                                          07/13/2016 17:45:25 PAGE 2   

  53   1              TH1 = timer0h;               //控制音调
  54   1              TL1 = timer0l;
  55   1              TR1 = 1;                     //启动T1, 由T1输出方波去发音
  56   1              delay_music(time);                 //控制时间长度
  57   1            }
  58          ///////////////////////////////////////////////////////////////////////
  59          void Song(unsigned char j)  
  60                 { 
  61   1                 unsigned char k, i;
  62   1                 i = 0;
  63   1                 time = 1; 
  64   1                  while(time) {
  65   2                      k = music[j][i] + 7 * music[j][i + 1] - 1;
  66   2                      timer0h = FREQH[k];      
  67   2                      timer0l = FREQL[k];     
  68   2                      time = music[j][i + 2];   
  69   2                      i += 3;
  70   2                      song(); 
  71   2      
  72   2                    }
  73   1             }
  74          //////////////////////////////////////////////////////////////////////////////////
  75          //以下接口根据自己需要扩展               
  76          void music_player(){
  77   1      
  78   1          Clear();
  79   1          Song(0);
  80   1          return; 
  81   1          
  82   1      
  83   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    341    ----
   CONSTANT SIZE    =    556    ----
   XDATA SIZE       =      4       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
